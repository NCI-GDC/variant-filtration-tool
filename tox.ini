[tox]
envlist = py3,help,version,ruff,type,cov
isolated_build = true

[tox:.package]
basepython = python3

[testenv]
setenv = 
	package = gdc_filtration_tools
	PYTHONHASHSEED = 0
passenv = PIP_EXTRA_INDEX_URL
skip_install =
	false
install_command = python -m pip install --no-binary pysam {opts} {packages}
extras = test
commands = pytest -vv {posargs}

[testenv:dev]
basepython = python3.9
extras =
	dev
	test

[testenv:detect-secrets]
deps =
  detect-secrets==1.4.0
skip_install =
	true
commands =
  detect-secrets scan > .secrets.baseline

[testenv:compile]
deps = uv
skip_install =
	true
commands =
  uv pip compile -o requirements.txt pyproject.toml

[testenv:cov]
deps = 
extras = test
commands =
	coverage run -m pytest tests/
	coverage combine
	coverage report -m
	coverage xml
	coverage xml -o test-reports/results.xml

[testenv:ruff]
skip_install=True
deps = 
  ruff
commands = 
	ruff check {env:package}/ tests/

[testenv:type]
skip_install = false
deps=
  mypy
extras = type
commands =
	mypy --ignore-missing-imports {env:package}/

[testenv:build]
skip_install= true
isolated_build = false
deps =
	setuptools_scm
	flit
extras = build
commands =
	python -m setuptools_scm
	flit build

[testenv:publish]
isolated_build=False
allowlist_externals = just
skip_install=true
deps =
        setuptools_scm
        flit
passenv =
	TWINE_USERNAME
	TWINE_PASSWORD
	TWINE_REPOSITORY_URL
extras = build 
commands = 
	python -m setuptools_scm
	flit build
	twine check dist/*
	twine upload dist/*

[testenv:version]
skip_install=True
allowlist_externals =
  git
deps =
commands = 
  git describe --tags --always

[testenv:cruft]
skip_install=True
deps = cruft
allowlist_externals =
  git
commands = 
  cruft check
